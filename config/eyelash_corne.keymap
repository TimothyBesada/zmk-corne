#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "alias_corne.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

// Homerow mods

#define HRM_BEHAVIOR "tap-preferred"
#define HRM_TAPPING_TERM_MS 180
#define HRM_REQUIRE_PRIOR_IDLE_MS 100
#define HRM_QUICK_TAP_MS 160

/ {
    hml: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_LEFT";
        flavor =
        HRM_BEHAVIOR;
        tapping-term-ms = <HRM_TAPPING_TERM_MS>;
        quick-tap-ms = <HRM_QUICK_TAP_MS>;
        require-prior-idle-ms = <HRM_REQUIRE_PRIOR_IDLE_MS>;
        hold-trigger-key-positions = <KEYS_R KEYS_T>;
        hold-trigger-on-release;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    hmr: homerow_mods_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_RIGHT";
        flavor =
        HRM_BEHAVIOR;
        tapping-term-ms = <HRM_TAPPING_TERM_MS>;
        quick-tap-ms = <HRM_QUICK_TAP_MS>;
        require-prior-idle-ms = <HRM_REQUIRE_PRIOR_IDLE_MS>;
        hold-trigger-key-positions = <KEYS_L KEYS_T>;
        hold-trigger-on-release;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    exlamation_question_mark: exlamation_question_mark {
        compatible = "zmk,behavior-mod-morph";
        label = "EXLAMATION_QUESTION_MARK";
        bindings = <&kp LS(NUMBER_1)>, <&kp MINUS>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
        keep-mods = <(MOD_LSFT)>;
    };

    thumb_layers: thumb_layers {
        compatible = "zmk,behavior-hold-tap";
        label = "THUMB_LAYERS";
        flavor =
        HRM_BEHAVIOR;
        tapping-term-ms = <HRM_TAPPING_TERM_MS>;
        quick-tap-ms = <HRM_QUICK_TAP_MS>;
        require-prior-idle-ms = <HRM_REQUIRE_PRIOR_IDLE_MS>;
        hold-trigger-on-release;
        #binding-cells = <2>;
        bindings = <&mo>, <&kp>;
    };

    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_parenthesis {
            bindings = <&kp LS(N8)>;
            key-positions = <16 17>;
            layers = <0>;
            require-prior-idle-ms = <75>;
            timeout-ms = <50>;
        };

        right_parenthesis {
            bindings = <&kp LS(N9)>;
            key-positions = <23 24>;
            layers = <0>;
            require-prior-idle-ms = <75>;
            timeout-ms = <50>;
        };
    };

    DEFAULT {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEFAULT";
            bindings = <
&caps_word              &kp Q         &kp W            &kp F                &kp P                  &kp B                                &none         &kp J                  &kp L                      &kp U                   &kp Y            &kp LBKT      &kp SQT
&skq LSHFT              &hml LCTRL A  &hml LEFT_ALT R  &hml LEFT_GUI S      &hml LEFT_SHIFT T      &kp G                         &none  &none  &none  &kp M                  &hmr LSHIFT N              &hmr LGUI E             &hmr LEFT_ALT I  &hmr LCTRL O  &kp SEMI
&mt LEFT_GUI BACKSLASH  &kp Z         &kp X            &kp C                &kp D                  &kp V                &none           &none         &kp K                  &kp H                      &kp COMMA               &kp DOT          &kp FSLH      &exlamation_question_mark
                                                       &thumb_layers 5 ESC  &thumb_layers 1 SPACE  &thumb_layers 4 TAB                                &thumb_layers 3 ENTER  &thumb_layers 2 BACKSPACE  &thumb_layers 6 DELETE
            >;
        };

        LAYER1 {
            display-name = "LAYER1";
            bindings = <
&trans        &trans            &trans        &trans        &trans                &kp LG(X)                  &none           &trans      &trans    &trans         &trans        &trans     &trans
&kp TAB       &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT        &kp LG(C)           &none  &none  &none    &kp LG(A)   &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&kp LC(SEMI)  &kp LG(A)         &kp LG(X)     &kp LG(C)     &kp LG(LS(NUMBER_4))  &kp LG(V)  &none           &none           &kp INSERT  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
                                              &trans        &none                 &trans                                     &trans      &trans    &trans                                          
            >;
        };

        LAYER2 {
            display-name = "LAYER2";
            bindings = <
&kp NON_US_BACKSLASH   &kp COMMA   &kp N7        &kp N8         &kp N9        &kp N0                     &none           &trans  &trans  &trans   &trans   &trans   &trans
&kp LS(RIGHT_BRACKET)  &kp DOT     &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp MINUS           &none  &none  &none    &trans  &trans  &trans   &trans   &trans   &trans
&kp RA(RIGHT_BRACKET)  &kp GRAVE   &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp FSLH   &none           &none           &trans  &trans  &trans   &trans   &trans   &trans
                                                 &kp LS(EQUAL)  &trans        &trans                                     &trans  &none   &trans
            >;
        };

        LAYER3 {
            display-name = "LAYER3";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &none           &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans           &none  &none  &none    &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none           &none           &trans  &trans  &trans   &trans   &trans   &trans
                        &trans  &trans  &trans                                  &none   &trans  &trans                           
            >;
        };

        LAYER4 {
            display-name = "LAYER4";
            bindings = <
&kp LS(LA(LG(V)))             &kp LS(LA(LC(LG(NUMBER_1))))  &kp LS(LA(LC(LG(NUMBER_2))))  &kp LS(LA(LC(LG(NUMBER_3))))  &kp LS(LA(LC(LG(NUMBER_4))))  &kp LS(LA(LC(LG(N5))))                    &none           &trans                &trans                    &trans                          &trans                        &trans                     &trans                
&kp LS(LA(LG(N0)))            &kp LS(LA(LG(NUMBER_1)))      &kp LS(LA(LG(NUMBER_2)))      &kp LS(LA(LG(NUMBER_3)))      &kp LS(LA(LG(NUMBER_4)))      &kp LS(LA(LG(NUMBER_5)))           &none  &none  &none    &kp LS(LA(LG(LEFT)))  &kp LS(LA(LC(LG(LEFT))))  &kp LC(LG(LA(LS(DOWN_ARROW))))  &kp LS(LA(LG(LC(UP_ARROW))))  &kp LS(LA(LC(LG(RIGHT))))  &kp LS(LA(LG(RIGHT))) 
&kp LS(LA(LG(LC(NUMBER_6))))  &kp LS(LA(LC(LG(N0))))        &kp LS(LA(LG(NUMBER_6)))      &kp LS(LA(LG(N7)))            &kp LS(LA(LG(N8)))            &kp LS(LA(LG(N9)))        &none           &none           &kp LS(LA(LG(N)))     &kp LS(LC(LA(LG(M))))     &kp LS(LA(LG(C)))               &kp LS(LA(LC(LG(R))))         &trans                     &trans                
                                                                                          &trans                        &trans                        &none                                                     &kp LG(W)             &kp LG(LA(H))             &kp LG(H)                                                                                                      
            >;
        };

        LAYER5 {
            display-name = "LAYER5";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &none           &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans           &none  &none  &none    &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none           &none           &trans  &trans  &trans   &trans   &trans   &trans
                        &none   &trans  &trans                                  &trans  &trans  &trans                           
            >;
        };

        LAYER6 {
            display-name = "LAYER6";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &none           &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans           &none  &none  &none    &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none           &none           &trans  &trans  &trans   &trans   &trans   &trans
                        &trans  &trans  &trans                                  &trans  &trans  &none                           
            >;
        };
    };
};
